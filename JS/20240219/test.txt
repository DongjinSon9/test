"   hi   ".trim()    >> 가ㅓ지치기. 공백을 제거함.
>>>>출력>>>>> 'hi'
"1"+ 1 = 11
문자+숫자=문자
div 블록 레벨 , span 인라인 레벨

우선 순위 : 아이디 > 클래스 > 선택자

검색 엔진 : JavaScript select tag by css selector                        셀렉트 태그 검색
https://developer.mozilla.org/ko/docs/Web/API/Document/querySelector
               
검색 엔진 : JavaScript element style                                     자바스크립트 요소 스타일 검색
https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style

= 대입 연산자 
== 등위 연산자
=== 일치 연산자(데이터 형도 같이 비교)
ex) x = 1; y = "1";
    x == y , true
    x === y , false

html 엔티티 참고 블로그
https://miaow-miaow.tistory.com/56

반복문 기본 문법
for문 : 순서가 있어서 차례대로 뭔가를 반복함.
while문 : 특정 조건에 따라서 계속 반복할지 여부가 나뉘어짐.

var alist = document.querySelectorAll('a');  >>>> 모든 A 태그 요소를 다 가져와서 배열에 담는다.
배열 var alist = []                     >>>>>>>>> 가급적 담을 때는 같은 요소만 담는 것을 추천한다. 여러 개를 담을 때 모델별로 정리가 돼있으면 한번에 담아도 된다.
객체 , json(중간데이터) 사용시 {}로 사용
push() : 해당 배열에 요소를 추가.(맨 뒤에 추가 된다.)

반복 되는 코드들이 조금씩 눈에 들어오는데,
디자인 패턴
종류가
a. 반복패턴                >>> 배열과 같이 사용을 많이 한다.
b. 전략 패턴               >>> 중복이 되는지 안 되는 지 분리 작업.
c. mvc 패턴                >>> spring의 기본 패턴.
 ㄴ 모델, 부, 컨트롤러 등
d. 데코레이션 패턴          >>> 나중에 자바 등에, 파일의 IO(인풋, 아웃풋)의 내장함수들이 많이 사용함.

while (조건식) {
    참일 경우 , 반복적으로 실행이 되는 문장.
}

사칙연산 %  : 나머지
사칙연산 // : 몫

for문 예시 ---- for(i=0; i<alist.lenth;, i++) {}

var alist = document.querySelectorAll('a');
console.log(alist[0]);
console.log(alist[1]);
console.log(alist.length);                >>>>>>>>>>>> typeof(alist) => object  객체.